<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Data Visualization for Regression Monkeys</title>
<link>https://ryonakagami.github.io/regmonkey_datavisualization/</link>
<atom:link href="https://ryonakagami.github.io/regmonkey_datavisualization/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.6.43</generator>
<lastBuildDate>Mon, 14 Apr 2025 00:00:00 GMT</lastBuildDate>
<item>
  <title>1  質的データの出現頻度</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey_datavisualization/posts/1D-datavisualization/frequency-counts-of-data-with-bar-plot.html</link>
  <description><![CDATA[ 




<section id="問題設定" class="level2">
<h2 class="anchored" data-anchor-id="問題設定">問題設定</h2>
<p>以下のようなカテゴリ別出現頻度のデータが与えられたとします．</p>
<ul>
<li><code>faulty_component</code>: 故障箇所</li>
<li><code>faulty_category</code>: 故障内容に応じた分類</li>
<li><code>count</code>: 出現頻度</li>
</ul>
<div id="f085b399" class="cell" data-execution_count="1">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"></span>
<span id="cb1-3"></span>
<span id="cb1-4">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb1-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"faulty_component"</span>: [</span>
<span id="cb1-6">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ハードディスク"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ハードディスク"</span>,</span>
<span id="cb1-7">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"メモリ"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"メモリ"</span>,</span>
<span id="cb1-8">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"電源ユニット"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"電源ユニット"</span>,</span>
<span id="cb1-9">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ファン"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"マザーボード"</span>,</span>
<span id="cb1-10">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"液晶ディスプレイ"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"液晶ディスプレイ"</span>,</span>
<span id="cb1-11">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ソフトウェア"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ソフトウェア"</span></span>
<span id="cb1-12">    ],</span>
<span id="cb1-13">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"faulty_category"</span>: [</span>
<span id="cb1-14">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"接続不良"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"異音"</span>,</span>
<span id="cb1-15">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"起動不良"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ブルースクリーン"</span>,</span>
<span id="cb1-16">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"電源不安定"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"電源不良"</span>,</span>
<span id="cb1-17">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"異音"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"接続不良"</span>,</span>
<span id="cb1-18">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"画面不認識"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"表示トラブル"</span>,</span>
<span id="cb1-19">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"起動時エラー"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"アプリ強制終了"</span></span>
<span id="cb1-20">    ],</span>
<span id="cb1-21">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"count"</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">125</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">87</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">73</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">52</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">91</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">38</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">33</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">49</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">58</span>]</span>
<span id="cb1-22">}</span>
<span id="cb1-23"></span>
<span id="cb1-24">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(data)</span>
<span id="cb1-25">df</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="1">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">faulty_component</th>
<th data-quarto-table-cell-role="th">faulty_category</th>
<th data-quarto-table-cell-role="th">count</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>ハードディスク</td>
<td>接続不良</td>
<td>125</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>ハードディスク</td>
<td>異音</td>
<td>87</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>メモリ</td>
<td>起動不良</td>
<td>73</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>メモリ</td>
<td>ブルースクリーン</td>
<td>52</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>電源ユニット</td>
<td>電源不安定</td>
<td>64</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">5</td>
<td>電源ユニット</td>
<td>電源不良</td>
<td>91</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">6</td>
<td>ファン</td>
<td>異音</td>
<td>40</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">7</td>
<td>マザーボード</td>
<td>接続不良</td>
<td>38</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">8</td>
<td>液晶ディスプレイ</td>
<td>画面不認識</td>
<td>70</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">9</td>
<td>液晶ディスプレイ</td>
<td>表示トラブル</td>
<td>33</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">10</td>
<td>ソフトウェア</td>
<td>起動時エラー</td>
<td>49</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">11</td>
<td>ソフトウェア</td>
<td>アプリ強制終了</td>
<td>58</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p><strong> ▶&nbsp; 可視化内容</strong></p>
<ol type="1">
<li>複数カテゴリ変数を結合して生成したラベル変数をkey，出現頻度をvalueとしたデータについて，出現頻度をbar plot, 累積頻度をline plotとして可視化</li>
<li>2つのカテゴリ次元にわたる値の頻度分布をheatmapを用いて可視化</li>
</ol>
</section>
<section id="可視化方針1-bar-plot-line-plot" class="level2">
<h2 class="anchored" data-anchor-id="可視化方針1-bar-plot-line-plot">可視化方針1: bar plot + line plot</h2>
<p><strong> ▶&nbsp; 前処理</strong></p>
<p>出現頻度のカラムを用いて事前に <code>descending sort</code> を以下のように実施します．</p>
<div id="97689a81" class="cell" data-execution_count="2">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">df_sorted <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.sort_values(by<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"count"</span>, ascending<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>).reset_index(drop<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb2-2">df_sorted[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cum_percent"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_sorted[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"count"</span>].cumsum() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> df_sorted[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"count"</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span>
<span id="cb2-3">df_sorted[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_sorted[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"faulty_component"</span>].astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> df_sorted[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"faulty_category"</span>].astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>)</span>
<span id="cb2-4">df_sorted.head()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="2">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">faulty_component</th>
<th data-quarto-table-cell-role="th">faulty_category</th>
<th data-quarto-table-cell-role="th">count</th>
<th data-quarto-table-cell-role="th">cum_percent</th>
<th data-quarto-table-cell-role="th">label</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>ハードディスク</td>
<td>接続不良</td>
<td>125</td>
<td>0.160256</td>
<td>ハードディスク-接続不良</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>電源ユニット</td>
<td>電源不良</td>
<td>91</td>
<td>0.276923</td>
<td>電源ユニット-電源不良</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>ハードディスク</td>
<td>異音</td>
<td>87</td>
<td>0.388462</td>
<td>ハードディスク-異音</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>メモリ</td>
<td>起動不良</td>
<td>73</td>
<td>0.482051</td>
<td>メモリ-起動不良</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>液晶ディスプレイ</td>
<td>画面不認識</td>
<td>70</td>
<td>0.571795</td>
<td>液晶ディスプレイ-画面不認識</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p><br> <strong> ▶&nbsp; 引数テーブル</strong></p>
<table class="caption-top table">
<caption>Args</caption>
<colgroup>
<col style="width: 20%">
<col style="width: 80%">
</colgroup>
<thead>
<tr class="header">
<th>引数</th>
<th>説明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>data</code></td>
<td>カテゴリ，件数，累積値を含む入力データ．cumulative plotが正しく動作するには，データが適切にソートされている必要がある</td>
</tr>
<tr class="even">
<td><code>category_column</code></td>
<td>x軸に使用するカテゴリ列の名前</td>
</tr>
<tr class="odd">
<td><code>count_column</code></td>
<td>棒グラフ（主軸）に使用する件数列の名前</td>
</tr>
<tr class="even">
<td><code>cumulative_column</code></td>
<td>line plot(y2-axis)に使用する累積値（例：パーセンテージ）の列の名前</td>
</tr>
<tr class="odd">
<td><code>xaxis_name</code></td>
<td>: x軸のタイトル．デフォルトは <code>""</code></td>
</tr>
<tr class="even">
<td><code>y1_axis_name</code></td>
<td><code>y1-axis</code>のタイトル．デフォルトは <code>""</code></td>
</tr>
<tr class="odd">
<td><code>y2_axis_name</code></td>
<td><code>y2-axis</code>のタイトル．デフォルトは <code>""</code></td>
</tr>
<tr class="even">
<td><code>y1_label</code></td>
<td>bar plotのlegendラベル．デフォルトは <code>""</code></td>
</tr>
<tr class="odd">
<td><code>y2_label</code></td>
<td>cumulative plotのlegendラベル．デフォルトは <code>""</code></td>
</tr>
<tr class="even">
<td><code>figure_title</code></td>
<td>図全体のタイトル．デフォルトは <code>""</code></td>
</tr>
<tr class="odd">
<td><code>figsize</code></td>
<td><code>matplotlib</code>用のfigure size設定値(<code>tuple</code>)</td>
</tr>
</tbody>
</table>
<p><br> <strong> ▶&nbsp; <code>Plotly</code> を用いた可視化</strong></p>
<div id="9675bb5d" class="cell" data-execution_count="3">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> plotly.graph_objects <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> go</span>
<span id="cb3-2"></span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_category_frequency_plotly(</span>
<span id="cb3-5">    data: pd.DataFrame,</span>
<span id="cb3-6">    category_column: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>,</span>
<span id="cb3-7">    count_column: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>,</span>
<span id="cb3-8">    cumulative_column: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>,</span>
<span id="cb3-9">    xaxis_name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb3-10">    y1_axis_name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb3-11">    y2_axis_name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb3-12">    y1_label: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb3-13">    y2_label: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb3-14">    figure_title: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb3-15">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> go.Figure:</span>
<span id="cb3-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb3-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - カテゴリごとの件数を棒グラフで、累積値（例：累積パーセンテージ）を折れ線グラフで可視化するPlotly図を生成</span></span>
<span id="cb3-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - cumulative plotが正しく動作するには，データが適切にソートされている必要がある</span></span>
<span id="cb3-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb3-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create bar trace</span></span>
<span id="cb3-21">    bar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> go.Bar(</span>
<span id="cb3-22">        x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>data[category_column],</span>
<span id="cb3-23">        y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>data[count_column],</span>
<span id="cb3-24">        name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>y1_label,</span>
<span id="cb3-25">        yaxis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y1"</span>,</span>
<span id="cb3-26">        marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#6699CC"</span>),</span>
<span id="cb3-27">    )</span>
<span id="cb3-28"></span>
<span id="cb3-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create cumulative line trace</span></span>
<span id="cb3-30">    line <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> go.Scatter(</span>
<span id="cb3-31">        x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>data[category_column],</span>
<span id="cb3-32">        y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_sorted[cumulative_column],</span>
<span id="cb3-33">        name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>y2_label,</span>
<span id="cb3-34">        yaxis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y2"</span>,</span>
<span id="cb3-35">        mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lines+markers"</span>,</span>
<span id="cb3-36">        line<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#000000"</span>, dash<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dot"</span>),</span>
<span id="cb3-37">    )</span>
<span id="cb3-38"></span>
<span id="cb3-39">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Layout</span></span>
<span id="cb3-40">    layout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> go.Layout(</span>
<span id="cb3-41">        title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(</span>
<span id="cb3-42">            text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>figure_title,</span>
<span id="cb3-43">            x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>,</span>
<span id="cb3-44">            xanchor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>,</span>
<span id="cb3-45">            yanchor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span>,</span>
<span id="cb3-46">        ),</span>
<span id="cb3-47">        margin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>),</span>
<span id="cb3-48">        xaxis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>xaxis_name, tickangle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>),</span>
<span id="cb3-49">        yaxis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>y1_axis_name),</span>
<span id="cb3-50">        yaxis2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(</span>
<span id="cb3-51">            title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>y2_axis_name,</span>
<span id="cb3-52">            overlaying<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>,</span>
<span id="cb3-53">            side<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span>,</span>
<span id="cb3-54">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.1</span>],</span>
<span id="cb3-55">            gridcolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#EFF5F5"</span>,</span>
<span id="cb3-56">        ),</span>
<span id="cb3-57">        legend<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.05</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, orientation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"v"</span>),</span>
<span id="cb3-58">    )</span>
<span id="cb3-59"></span>
<span id="cb3-60">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot</span></span>
<span id="cb3-61">    fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> go.Figure(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[bar, line], layout<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>layout).update_layout(</span>
<span id="cb3-62">        {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot_bgcolor"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#EFF5F5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"yaxis"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gridcolor"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#EFF5F5"</span>}}</span>
<span id="cb3-63">    )</span>
<span id="cb3-64"></span>
<span id="cb3-65">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> fig</span></code></pre></div>
</details>
</div>
<p>実行コードは以下，</p>
<div id="3ca26567" class="cell" data-execution_count="4">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_category_frequency_plotly(</span>
<span id="cb4-2">    data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_sorted,</span>
<span id="cb4-3">    category_column<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>,</span>
<span id="cb4-4">    count_column<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"count"</span>,</span>
<span id="cb4-5">    cumulative_column<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cum_percent"</span>,</span>
<span id="cb4-6">    xaxis_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Faulty Category"</span>,</span>
<span id="cb4-7">    y1_axis_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frequency"</span>,</span>
<span id="cb4-8">    y2_axis_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cumulative Percentage"</span>,</span>
<span id="cb4-9">    y1_label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"件数"</span>,</span>
<span id="cb4-10">    y2_label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"累積割合"</span>,</span>
<span id="cb4-11">    figure_title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PC Faulty component frequency"</span>,</span>
<span id="cb4-12">)</span>
<span id="cb4-13">fig.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div>                            <div id="9b7219c2-38ed-416f-b454-4da1cb36615d" class="plotly-graph-div" style="height:525px; width:100%;"></div>            <script type="text/javascript">                require(["plotly"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("9b7219c2-38ed-416f-b454-4da1cb36615d")) {                    Plotly.newPlot(                        "9b7219c2-38ed-416f-b454-4da1cb36615d",                        [{"marker":{"color":"#6699CC"},"name":"\u4ef6\u6570","x":["\u30cf\u30fc\u30c9\u30c7\u30a3\u30b9\u30af-\u63a5\u7d9a\u4e0d\u826f","\u96fb\u6e90\u30e6\u30cb\u30c3\u30c8-\u96fb\u6e90\u4e0d\u826f","\u30cf\u30fc\u30c9\u30c7\u30a3\u30b9\u30af-\u7570\u97f3","\u30e1\u30e2\u30ea-\u8d77\u52d5\u4e0d\u826f","\u6db2\u6676\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4-\u753b\u9762\u4e0d\u8a8d\u8b58","\u96fb\u6e90\u30e6\u30cb\u30c3\u30c8-\u96fb\u6e90\u4e0d\u5b89\u5b9a","\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2-\u30a2\u30d7\u30ea\u5f37\u5236\u7d42\u4e86","\u30e1\u30e2\u30ea-\u30d6\u30eb\u30fc\u30b9\u30af\u30ea\u30fc\u30f3","\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2-\u8d77\u52d5\u6642\u30a8\u30e9\u30fc","\u30d5\u30a1\u30f3-\u7570\u97f3","\u30de\u30b6\u30fc\u30dc\u30fc\u30c9-\u63a5\u7d9a\u4e0d\u826f","\u6db2\u6676\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4-\u8868\u793a\u30c8\u30e9\u30d6\u30eb"],"y":[125,91,87,73,70,64,58,52,49,40,38,33],"yaxis":"y","type":"bar"},{"line":{"color":"#000000","dash":"dot"},"mode":"lines+markers","name":"\u7d2f\u7a4d\u5272\u5408","x":["\u30cf\u30fc\u30c9\u30c7\u30a3\u30b9\u30af-\u63a5\u7d9a\u4e0d\u826f","\u96fb\u6e90\u30e6\u30cb\u30c3\u30c8-\u96fb\u6e90\u4e0d\u826f","\u30cf\u30fc\u30c9\u30c7\u30a3\u30b9\u30af-\u7570\u97f3","\u30e1\u30e2\u30ea-\u8d77\u52d5\u4e0d\u826f","\u6db2\u6676\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4-\u753b\u9762\u4e0d\u8a8d\u8b58","\u96fb\u6e90\u30e6\u30cb\u30c3\u30c8-\u96fb\u6e90\u4e0d\u5b89\u5b9a","\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2-\u30a2\u30d7\u30ea\u5f37\u5236\u7d42\u4e86","\u30e1\u30e2\u30ea-\u30d6\u30eb\u30fc\u30b9\u30af\u30ea\u30fc\u30f3","\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2-\u8d77\u52d5\u6642\u30a8\u30e9\u30fc","\u30d5\u30a1\u30f3-\u7570\u97f3","\u30de\u30b6\u30fc\u30dc\u30fc\u30c9-\u63a5\u7d9a\u4e0d\u826f","\u6db2\u6676\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4-\u8868\u793a\u30c8\u30e9\u30d6\u30eb"],"y":[0.16025641025641027,0.27692307692307694,0.38846153846153847,0.48205128205128206,0.5717948717948718,0.6538461538461539,0.7282051282051282,0.7948717948717948,0.8576923076923076,0.908974358974359,0.9576923076923077,1.0],"yaxis":"y2","type":"scatter"}],                        {"legend":{"orientation":"v","x":1.05,"y":1.0},"margin":{"t":50},"title":{"text":"PC Faulty component frequency","x":0.0,"xanchor":"left","yanchor":"top"},"xaxis":{"tickangle":45,"title":{"text":"Faulty Category"}},"yaxis":{"title":{"text":"Frequency"},"gridcolor":"#EFF5F5"},"yaxis2":{"gridcolor":"#EFF5F5","overlaying":"y","range":[0,1.1],"side":"right","title":{"text":"Cumulative Percentage"}},"template":{"data":{"histogram2dcontour":[{"type":"histogram2dcontour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"choropleth":[{"type":"choropleth","colorbar":{"outlinewidth":0,"ticks":""}}],"histogram2d":[{"type":"histogram2d","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmap":[{"type":"heatmap","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmapgl":[{"type":"heatmapgl","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"contourcarpet":[{"type":"contourcarpet","colorbar":{"outlinewidth":0,"ticks":""}}],"contour":[{"type":"contour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"surface":[{"type":"surface","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"mesh3d":[{"type":"mesh3d","colorbar":{"outlinewidth":0,"ticks":""}}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"parcoords":[{"type":"parcoords","line":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolargl":[{"type":"scatterpolargl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"scattergeo":[{"type":"scattergeo","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolar":[{"type":"scatterpolar","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"scattergl":[{"type":"scattergl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatter3d":[{"type":"scatter3d","line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattermapbox":[{"type":"scattermapbox","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterternary":[{"type":"scatterternary","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattercarpet":[{"type":"scattercarpet","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"pie":[{"automargin":true,"type":"pie"}]},"layout":{"autotypenumbers":"strict","colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"hovermode":"closest","hoverlabel":{"align":"left"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"bgcolor":"#E5ECF6","angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"ternary":{"bgcolor":"#E5ECF6","aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]]},"xaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"yaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"geo":{"bgcolor":"white","landcolor":"#E5ECF6","subunitcolor":"white","showland":true,"showlakes":true,"lakecolor":"white"},"title":{"x":0.05},"mapbox":{"style":"light"},"margin":{"b":0,"l":0,"r":0,"t":30}}},"plot_bgcolor":"#EFF5F5"},                        {"responsive": true}                    ).then(function(){
                            
var gd = document.getElementById('9b7219c2-38ed-416f-b454-4da1cb36615d');
var x = new MutationObserver(function (mutations, observer) {{
        var display = window.getComputedStyle(gd).display;
        if (!display || display === 'none') {{
            console.log([gd, 'removed!']);
            Plotly.purge(gd);
            observer.disconnect();
        }}
}});

// Listen for the removal of the full notebook cells
var notebookContainer = gd.closest('#notebook-container');
if (notebookContainer) {{
    x.observe(notebookContainer, {childList: true});
}}

// Listen for the clearing of the current output cell
var outputEl = gd.closest('.output');
if (outputEl) {{
    x.observe(outputEl, {childList: true});
}}

                        })                };                });            </script>        </div>
</div>
</div>
<p><br> <strong> ▶&nbsp; <code>matplotlib</code> を用いた可視化</strong></p>
<div id="62f66656" class="cell" data-execution_count="5">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb5-2"></span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_category_frequency_matplotlib(</span>
<span id="cb5-5">    data: pd.DataFrame,</span>
<span id="cb5-6">    category_column: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>,</span>
<span id="cb5-7">    count_column: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>,</span>
<span id="cb5-8">    cumulative_column: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>,</span>
<span id="cb5-9">    xaxis_name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb5-10">    y1_axis_name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb5-11">    y2_axis_name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb5-12">    y1_label: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb5-13">    y2_label: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb5-14">    figure_title: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb5-15">    figsize: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>),</span>
<span id="cb5-16">):</span>
<span id="cb5-17">    fig, ax1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>figsize)</span>
<span id="cb5-18">    ax1.set_facecolor(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#EFF5F5"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 👈 plot background color</span></span>
<span id="cb5-19"></span>
<span id="cb5-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Bar plot on primary y-axis</span></span>
<span id="cb5-21">    bars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax1.bar(</span>
<span id="cb5-22">        data[category_column], data[count_column], color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#6699CC"</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>y1_label</span>
<span id="cb5-23">    )</span>
<span id="cb5-24">    ax1.set_ylabel(y1_axis_name, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb5-25">    ax1.set_xlabel(xaxis_name, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb5-26">    ax1.tick_params(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>)</span>
<span id="cb5-27"></span>
<span id="cb5-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Line plot on secondary y-axis</span></span>
<span id="cb5-29">    ax2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax1.twinx()</span>
<span id="cb5-30">    line <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax2.plot(</span>
<span id="cb5-31">        data[category_column],</span>
<span id="cb5-32">        data[cumulative_column],</span>
<span id="cb5-33">        color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#000000"</span>,</span>
<span id="cb5-34">        linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dotted"</span>,</span>
<span id="cb5-35">        marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"o"</span>,</span>
<span id="cb5-36">        label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>y2_label,</span>
<span id="cb5-37">    )</span>
<span id="cb5-38">    ax2.set_ylabel(y2_axis_name, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb5-39">    ax2.set_ylim(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.1</span>)</span>
<span id="cb5-40">    ax2.tick_params(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>)</span>
<span id="cb5-41">    plt.setp(ax1.get_xticklabels(), rotation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">360</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>), ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 👈 Rotate x-axis labels</span></span>
<span id="cb5-42">    </span>
<span id="cb5-43">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Title and legend</span></span>
<span id="cb5-44">    fig.suptitle(figure_title, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>)</span>
<span id="cb5-45"></span>
<span id="cb5-46">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Combine legends from both axes</span></span>
<span id="cb5-47">    lines_labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>ax1.get_legend_handles_labels(), <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>ax2.get_legend_handles_labels()]</span>
<span id="cb5-48">    fig.legend(loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"upper left"</span>, bbox_to_anchor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.925</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.925</span>))</span>
<span id="cb5-49">    fig.patch.set_facecolor(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FFFFFF"</span>)</span>
<span id="cb5-50"></span>
<span id="cb5-51">    plt.tight_layout()</span>
<span id="cb5-52">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> fig, ax1, ax2</span></code></pre></div>
</details>
</div>
<p>実行コードは以下，</p>
<div id="2f218f46" class="cell" data-execution_count="6">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> regmonkey_style <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> stylewizard <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sw</span>
<span id="cb6-2"></span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># japanese language setup</span></span>
<span id="cb6-4">sw.set_font(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IPAexGothic"</span>)</span>
<span id="cb6-5"></span>
<span id="cb6-6"></span>
<span id="cb6-7">fig, ax1, ax2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_category_frequency_matplotlib(</span>
<span id="cb6-8">    data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_sorted,</span>
<span id="cb6-9">    category_column<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>,</span>
<span id="cb6-10">    count_column<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"count"</span>,</span>
<span id="cb6-11">    cumulative_column<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cum_percent"</span>,</span>
<span id="cb6-12">    xaxis_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Faulty Category"</span>,</span>
<span id="cb6-13">    y1_axis_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frequency"</span>,</span>
<span id="cb6-14">    y2_axis_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cumulative Percentage"</span>,</span>
<span id="cb6-15">    y1_label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"件数"</span>,</span>
<span id="cb6-16">    y2_label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"累積割合"</span>,</span>
<span id="cb6-17">    figure_title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PC Faulty component frequency"</span>,</span>
<span id="cb6-18">)</span>
<span id="cb6-19">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://ryonakagami.github.io/regmonkey_datavisualization/posts/1D-datavisualization/frequency-counts-of-data-with-bar-plot_files/figure-html/cell-7-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="可視化方針2-heatmap" class="level2">
<h2 class="anchored" data-anchor-id="可視化方針2-heatmap">可視化方針2: heatmap</h2>
<ul>
<li>ここでは，xaxis, yaxisとなる２つのカテゴリ変数を用いてpivot tableを作成し，それをheatmapで可視化</li>
<li>pivotにあたっての集計関数は <code>sum</code> を用いる</li>
<li><code>NaN</code>（欠損値）はプロット前に0で補完</li>
<li><code>"PuBu"</code> カラースケールを使用</li>
</ul>
<p><strong> ▶&nbsp; 実装</strong></p>
<div id="94e76605" class="cell" data-execution_count="7">
<details open="" class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb7-2"></span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> heatmap_frequency(</span>
<span id="cb7-5">    data: pd.DataFrame,</span>
<span id="cb7-6">    xaxis_column: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>,</span>
<span id="cb7-7">    yaxis_column: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>,</span>
<span id="cb7-8">    value_column: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>,</span>
<span id="cb7-9">    x_axis_name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb7-10">    y_axis_name: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb7-11">    figure_title: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb7-12">    plot_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'plotly'</span>,</span>
<span id="cb7-13">    figsize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span>
<span id="cb7-14">):</span>
<span id="cb7-15">    table <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.pivot_table(</span>
<span id="cb7-16">        df_sorted,</span>
<span id="cb7-17">        values<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>value_column,</span>
<span id="cb7-18">        index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[yaxis_column],</span>
<span id="cb7-19">        columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[xaxis_column],</span>
<span id="cb7-20">        aggfunc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sum"</span>,</span>
<span id="cb7-21">    ).fillna(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb7-22"></span>
<span id="cb7-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> plot_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'plotly'</span>:</span>
<span id="cb7-24">        fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> go.Figure(</span>
<span id="cb7-25">            data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>go.Heatmap(</span>
<span id="cb7-26">                z<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>table.values,</span>
<span id="cb7-27">                x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>table.columns,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Optional: x-axis labels</span></span>
<span id="cb7-28">                y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>table.index,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Optional: y-axis labels</span></span>
<span id="cb7-29">                colorscale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PuBu"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># You can try: 'Blues', 'Hot', 'Cividis', etc.</span></span>
<span id="cb7-30">            )</span>
<span id="cb7-31">        )</span>
<span id="cb7-32"></span>
<span id="cb7-33">        fig.update_layout(</span>
<span id="cb7-34">            title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>figure_title, xaxis_title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>x_axis_name, yaxis_title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>y_axis_name</span>
<span id="cb7-35">            </span>
<span id="cb7-36">        )</span>
<span id="cb7-37"></span>
<span id="cb7-38">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> fig</span>
<span id="cb7-39">    </span>
<span id="cb7-40">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb7-41">         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the plot</span></span>
<span id="cb7-42">        fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>figsize)</span>
<span id="cb7-43"></span>
<span id="cb7-44">        sns.heatmap(</span>
<span id="cb7-45">            table.values,</span>
<span id="cb7-46">            xticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>table.columns,</span>
<span id="cb7-47">            yticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>table.index,</span>
<span id="cb7-48">            cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PuBu"</span>,</span>
<span id="cb7-49">            ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax</span>
<span id="cb7-50">        )</span>
<span id="cb7-51"></span>
<span id="cb7-52">        ax.set_xlabel(x_axis_name)</span>
<span id="cb7-53">        ax.set_ylabel(y_axis_name)</span>
<span id="cb7-54">        ax.set_title(figure_title, loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>)</span>
<span id="cb7-55"></span>
<span id="cb7-56">        plt.xticks(rotation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">360</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>), ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'left'</span>)</span>
<span id="cb7-57">        plt.yticks(rotation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb7-58"></span>
<span id="cb7-59">        plt.tight_layout()</span>
<span id="cb7-60">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> fig, ax</span></code></pre></div>
</details>
</div>
<p><strong> ▶&nbsp; <code>Plotly</code> による可視化</strong></p>
<div id="643e20dd" class="cell" data-execution_count="8">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> heatmap_frequency(</span>
<span id="cb8-2">    data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_sorted,</span>
<span id="cb8-3">    xaxis_column<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"faulty_category"</span>,</span>
<span id="cb8-4">    yaxis_column<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"faulty_component"</span>,</span>
<span id="cb8-5">    value_column<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"count"</span>,</span>
<span id="cb8-6">    x_axis_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"故障カテゴリ"</span>,</span>
<span id="cb8-7">    y_axis_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"故障箇所"</span>,</span>
<span id="cb8-8">    figure_title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(</span>
<span id="cb8-9">        text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"故障分布"</span>,</span>
<span id="cb8-10">        font<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>),</span>
<span id="cb8-11">        automargin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb8-12">        x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Center title</span></span>
<span id="cb8-13">        y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>,</span>
<span id="cb8-14">        xanchor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>,</span>
<span id="cb8-15">    ),</span>
<span id="cb8-16">)</span>
<span id="cb8-17"></span>
<span id="cb8-18"></span>
<span id="cb8-19">fig.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div>                            <div id="8c7671b9-d2ec-4be3-b682-36c8b0e5bc95" class="plotly-graph-div" style="height:525px; width:100%;"></div>            <script type="text/javascript">                require(["plotly"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("8c7671b9-d2ec-4be3-b682-36c8b0e5bc95")) {                    Plotly.newPlot(                        "8c7671b9-d2ec-4be3-b682-36c8b0e5bc95",                        [{"colorscale":[[0.0,"rgb(255,247,251)"],[0.125,"rgb(236,231,242)"],[0.25,"rgb(208,209,230)"],[0.375,"rgb(166,189,219)"],[0.5,"rgb(116,169,207)"],[0.625,"rgb(54,144,192)"],[0.75,"rgb(5,112,176)"],[0.875,"rgb(4,90,141)"],[1.0,"rgb(2,56,88)"]],"x":["\u30a2\u30d7\u30ea\u5f37\u5236\u7d42\u4e86","\u30d6\u30eb\u30fc\u30b9\u30af\u30ea\u30fc\u30f3","\u63a5\u7d9a\u4e0d\u826f","\u753b\u9762\u4e0d\u8a8d\u8b58","\u7570\u97f3","\u8868\u793a\u30c8\u30e9\u30d6\u30eb","\u8d77\u52d5\u4e0d\u826f","\u8d77\u52d5\u6642\u30a8\u30e9\u30fc","\u96fb\u6e90\u4e0d\u5b89\u5b9a","\u96fb\u6e90\u4e0d\u826f"],"y":["\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2","\u30cf\u30fc\u30c9\u30c7\u30a3\u30b9\u30af","\u30d5\u30a1\u30f3","\u30de\u30b6\u30fc\u30dc\u30fc\u30c9","\u30e1\u30e2\u30ea","\u6db2\u6676\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4","\u96fb\u6e90\u30e6\u30cb\u30c3\u30c8"],"z":[[58.0,0.0,0.0,0.0,0.0,0.0,0.0,49.0,0.0,0.0],[0.0,0.0,125.0,0.0,87.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,40.0,0.0,0.0,0.0,0.0,0.0],[0.0,0.0,38.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[0.0,52.0,0.0,0.0,0.0,0.0,73.0,0.0,0.0,0.0],[0.0,0.0,0.0,70.0,0.0,33.0,0.0,0.0,0.0,0.0],[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,64.0,91.0]],"type":"heatmap"}],                        {"template":{"data":{"histogram2dcontour":[{"type":"histogram2dcontour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"choropleth":[{"type":"choropleth","colorbar":{"outlinewidth":0,"ticks":""}}],"histogram2d":[{"type":"histogram2d","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmap":[{"type":"heatmap","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmapgl":[{"type":"heatmapgl","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"contourcarpet":[{"type":"contourcarpet","colorbar":{"outlinewidth":0,"ticks":""}}],"contour":[{"type":"contour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"surface":[{"type":"surface","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"mesh3d":[{"type":"mesh3d","colorbar":{"outlinewidth":0,"ticks":""}}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"parcoords":[{"type":"parcoords","line":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolargl":[{"type":"scatterpolargl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"scattergeo":[{"type":"scattergeo","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolar":[{"type":"scatterpolar","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"scattergl":[{"type":"scattergl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatter3d":[{"type":"scatter3d","line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattermapbox":[{"type":"scattermapbox","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterternary":[{"type":"scatterternary","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattercarpet":[{"type":"scattercarpet","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"pie":[{"automargin":true,"type":"pie"}]},"layout":{"autotypenumbers":"strict","colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"family":"IPAexGothic"},"hovermode":"closest","hoverlabel":{"align":"left"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"bgcolor":"#E5ECF6","angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"ternary":{"bgcolor":"#E5ECF6","aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]]},"xaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"yaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"geo":{"bgcolor":"white","landcolor":"#E5ECF6","subunitcolor":"white","showland":true,"showlakes":true,"lakecolor":"white"},"title":{"x":0.05},"mapbox":{"style":"light"},"margin":{"b":0,"l":0,"r":0,"t":30}}},"title":{"font":{"size":18},"text":"\u6545\u969c\u5206\u5e03","automargin":true,"x":0.5,"y":0.95,"xanchor":"center"},"xaxis":{"title":{"text":"\u6545\u969c\u30ab\u30c6\u30b4\u30ea"}},"yaxis":{"title":{"text":"\u6545\u969c\u7b87\u6240"}}},                        {"responsive": true}                    ).then(function(){
                            
var gd = document.getElementById('8c7671b9-d2ec-4be3-b682-36c8b0e5bc95');
var x = new MutationObserver(function (mutations, observer) {{
        var display = window.getComputedStyle(gd).display;
        if (!display || display === 'none') {{
            console.log([gd, 'removed!']);
            Plotly.purge(gd);
            observer.disconnect();
        }}
}});

// Listen for the removal of the full notebook cells
var notebookContainer = gd.closest('#notebook-container');
if (notebookContainer) {{
    x.observe(notebookContainer, {childList: true});
}}

// Listen for the clearing of the current output cell
var outputEl = gd.closest('.output');
if (outputEl) {{
    x.observe(outputEl, {childList: true});
}}

                        })                };                });            </script>        </div>
</div>
</div>
<p><strong> ▶&nbsp; <code>matplotlib</code> による可視化</strong></p>
<div id="be045c40" class="cell" data-execution_count="9">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> heatmap_frequency(</span>
<span id="cb9-2">    data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_sorted,</span>
<span id="cb9-3">    xaxis_column<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'faulty_category'</span>,</span>
<span id="cb9-4">    yaxis_column<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'faulty_component'</span>,</span>
<span id="cb9-5">    value_column<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'count'</span>,</span>
<span id="cb9-6">    x_axis_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'故障カテゴリ'</span>,</span>
<span id="cb9-7">    y_axis_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'故障箇所'</span>,</span>
<span id="cb9-8">    figure_title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'故障分布'</span>,</span>
<span id="cb9-9">    plot_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'matplotlib'</span>,</span>
<span id="cb9-10">)</span>
<span id="cb9-11"></span>
<span id="cb9-12">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://ryonakagami.github.io/regmonkey_datavisualization/posts/1D-datavisualization/frequency-counts-of-data-with-bar-plot_files/figure-html/cell-10-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>


</section>

 ]]></description>
  <guid>https://ryonakagami.github.io/regmonkey_datavisualization/posts/1D-datavisualization/frequency-counts-of-data-with-bar-plot.html</guid>
  <pubDate>Mon, 14 Apr 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>1次元データ</title>
  <dc:creator>Ryo Nakagami</dc:creator>
  <link>https://ryonakagami.github.io/regmonkey_datavisualization/posts/1D-datavisualization/chapter-header.html</link>
  <description><![CDATA[ 







 ]]></description>
  <guid>https://ryonakagami.github.io/regmonkey_datavisualization/posts/1D-datavisualization/chapter-header.html</guid>
  <pubDate>Thu, 15 Aug 2024 00:00:00 GMT</pubDate>
</item>
</channel>
</rss>
